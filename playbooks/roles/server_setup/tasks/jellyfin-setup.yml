---
- name: Create Jellyfin media directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop: '{{ jellyfin_media_dirs }}'

- name: Config Jellyfin on Production
  block:
  - name: Get render group
    ansible.builtin.getent:
      database: group
      key: "{{ item }}"
      split: ':'
    register: getent_output
    loop:
      - render
      - video

  - ansible.builtin.debug:
      msg: "{{ getent_output.results[0].ansible_facts.getent_group.render[1] }}"

  - ansible.builtin.debug:
      msg: "{{ getent_output.results[1].ansible_facts.getent_group.video[1] }}"

  - name: Pull and run Jellyfin Docker image
    community.docker.docker_container:
      name: jellyfin
      image: "jellyfin/jellyfin:10.10.3"
      state: started
      restart_policy: "unless-stopped"
      network_mode: host
      recreate: true
      user: 0:0
      memory: "8G"
      volumes:
        - /srv/jellyfin/config:/config
        - /srv/jellyfin/cache:/cache
        - /mnt/media/Jellyfin:/media
      groups:
        - "{{ getent_output.results[0].ansible_facts.getent_group.render[1] }}"
        - "{{ getent_output.results[1].ansible_facts.getent_group.video[1] }}"
      devices:
        - /dev/dri/renderD128:/dev/dri/renderD128
        - /dev/kfd:/dev/kfd
      env:
        ROC_ENABLE_PRE_VEGA: "1"

  - name: Install OS utils for ROCm OpenCL runtime on container
    community.docker.docker_container_exec:
      container: jellyfin
      user: root
      command: '{{ item }}'
    loop:
      - apt update -y
      - apt install -y curl gpg

  - name: Copy rocm sources file to container
    community.docker.docker_container_copy_into:
      container: jellyfin
      container_path: /etc/apt/sources.list.d/rocm.sources
      mode: 755
      content: |
        Types: deb
        URIs: https://repo.radeon.com/rocm/apt/latest
        Suites: ubuntu
        Components: main
        Architectures: amd64
        Signed-By: /etc/apt/keyrings/rocm.gpg

  - name: Install ROCm OpenCL runtime on container
    community.docker.docker_container_exec:
      container: jellyfin
      user: root
      command: '{{ item }}'
    loop:
      - mkdir -p /etc/apt/keyrings
      - /bin/bash -c "curl -fsSL https://repo.radeon.com/rocm/rocm.gpg.key | gpg --dearmor -o /etc/apt/keyrings/rocm.gpg"
      - apt update -y
      - apt install -y rocm-opencl-runtime

  when: inventory_hostname != "default"

- name: Config Jellyfin on Staging
  block:
  - name: Pull and run Jellyfin Docker image
    community.docker.docker_container:
      name: jellyfin
      image: "jellyfin/jellyfin:10.10.3"
      state: started
      restart_policy: "unless-stopped"
      network_mode: host
      recreate: true
      volumes:
        - /srv/jellyfin/config:/config
        - /srv/jellyfin/cache:/cache
        - /mnt/media/Jellyfin:/media
  when: inventory_hostname == "default"

- name: Open jellyfin port on firewall
  ansible.posix.firewalld:
    port: 8096/tcp
    permanent: true
    state: enabled
    immediate: true
...