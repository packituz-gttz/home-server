---
- name: Create Prometheus directories
  become: true
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
    owner: '65534'
    group: '65534'
  loop:
    - /mnt/media-nvm/Prometheus/
    - /mnt/media-nvm/Prometheus/data

- name: Copy Prometheus main and web configuration file
  become: true
  ansible.builtin.copy:
    src: files/monitoring/prometheus/prometheus.yml
    dest: /mnt/media-nvm/Prometheus/
    group: '65534'
    owner: '65534'

- name: Pull and run Prometheus
  become: false
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:v2.54.0
    recreate: true
    network_mode: host
    restart_policy: "unless-stopped"
    volumes:
      - /mnt/media-nvm/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /mnt/media-nvm/Prometheus/data:/prometheus
    command: --config.file /etc/prometheus/prometheus.yml --storage.tsdb.path /prometheus/

- name: Open prometheus port on firewall
  become: true
  ansible.posix.firewalld:
    port: 9090/tcp
    permanent: true
    state: enabled
    immediate: true

## Setup Grafana

- name: Get user id
  become: true
  ansible.builtin.getent:
    database: passwd
    key: '{{ superuser_name }}'
    split: ':'
  register: getent_output

- name: Print getent output
  ansible.builtin.debug:
    msg: "{{ getent_output.ansible_facts.getent_passwd[superuser_name][1] }}"

- name: Pull and run Grafana
  community.docker.docker_container:
    name: grafana
    image: "grafana/grafana:12.2.0"
    state: started
    restart_policy: "unless-stopped"
    user: "{{ getent_output.ansible_facts.getent_passwd[superuser_name][1] }}"
    recreate: true
    volumes:
      - /mnt/media/Grafana:/var/lib/grafana
    ports:
      - 3000:3000


## Setup Loki

- name: Create Loki directories
  ansible.builtin.file:
    path: /mnt/media-nvm/Loki
    state: directory
    mode: '0755'
    owner: '{{ superuser_name }}'
    group: '{{ superuser_name }}'

- name: Copy Loki configuration file
  ansible.posix.synchronize:
    src: monitoring/prometheus/stack/loki/loki-config.yaml
    dest: /mnt/media-nvm/Loki/loki-config.yaml

- name: Pull and run Loki
  community.docker.docker_container:
    name: loki
    image: "grafana/loki:3.5.7"
    restart_policy: "unless-stopped"
    ports:
      - 3100:3100
    recreate: true
    volumes:
      - "/mnt/media-nvm/Loki/loki-config.yaml:/etc/loki/loki-config.yaml"
      - "/mnt/media-nvm/Loki/data:/data/loki"
    command: -config.file=/etc/loki/loki-config.yaml

## Setup Promtail

- name: Create Promtail directories
  ansible.builtin.file:
    path: /mnt/media-nvm/Promtail/config
    state: directory
    mode: '0755'
    owner: '{{ superuser_name }}'
    group: '{{ superuser_name }}'

- name: Copy Promtail configuration file
  ansible.posix.synchronize:
    src: monitoring/prometheus/stack/promtail/promtail-config.yaml
    dest: /mnt/media-nvm/Promtail/config/promtail-config.yaml

- name: Pull and run Promtail
  community.docker.docker_container:
    name: promtail
    image: grafana/promtail:3.5.7
    recreate: true
    restart_policy: "unless-stopped"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/media-nvm/Promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml

...