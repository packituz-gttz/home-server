---
- name: Create frigate config dir
  ansible.builtin.file:
    path: /media/Frigate/config/
    state: directory
    mode: '0755'

- name: Copy camera configuration file
  ansible.builtin.template:
    src: "frigate/config.yml"
    dest: "/media/Frigate/config/config.yml"

- name: Pull and run Frigate
  community.docker.docker_container:
    name: frigate
    image: "ghcr.io/blakeblackshear/frigate:0.13.2"
    state: started
    restart_policy: "unless-stopped"
    mounts:
      - type: tmpfs
        target: /tmp/cache
        tmpfs_size: "1GB"
    shm_size: "128M"
    memory: "3G"
    cpus: 2.5
    devices:
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Frigate/config:/config
      - /media/Frigate/storage:/media/frigate
    recreate: true
    env:
      FRIGATE_RTSP_PASSWORD: '{{ frigate_rtsp_password }}'
    ports:
      - 5001:5000
      - 8554:8554
      - 8555:8555/tcp
      - 8555:8555/udp

- name: Install MegaCMD
  ansible.builtin.dnf:
    name: https://mega.nz/linux/repo/CentOS_8/x86_64/megacmd-CentOS_8.x86_64.rpm
    state: present
    disable_gpg_check: true

- name: Login into mega account
  ansible.builtin.command:
    argv:
      - mega-login
      - "{{ mega_email }}"
      - "{{ mega_password }}"
  register: result
  failed_when:
    - result.rc != 54 and result.rc != 0 and result.rc != 57
  changed_when:
    - '"Already logged in" not in result.stdout'

- name: Create remote directories for synchronization
  ansible.builtin.command:
    argv:
      - mega-mkdir
      - '{{ item }}'
  loop:
    - "{{ mega_remote_frigate_clips_directory }}"
    - "{{ mega_remote_frigate_recordings_directory }}"
  register: result
  failed_when:
    - result.rc != 54 and result.rc != 0  and result.rc != 57
  changed_when:
    - '"Folder already exists:" not in result.stdout'

- name: Enable synchronization
  ansible.builtin.command:
    argv:
      - mega-sync
      - '{{ item.source }}'
      - '{{ item.destination }}'
  loop:
    - { source: /media/Frigate/storage/clips , destination: "{{ mega_remote_frigate_clips_directory }}" }
    - { source: /media/Frigate/storage/recordings , destination: "{{ mega_remote_frigate_recordings_directory }}" }
  register: result
  failed_when:
    - result.rc != 12 and result.rc != 0
  changed_when:
    - '"Failed to sync folder: Already exists. Active sync same path" not in result.stdout'
...